@model IPagedList<ModelEF.Model.UserAccount>
@using PagedList;
@using PagedList.Mvc;
@{
	ViewBag.Title = "Tài khoản quản trị";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid">
	<br />
	<div class="row">
		<div class="col-sm-2">
			<a class="btn btn-success" href="@Url.Action("create","employee")"><i class="fa fa-plus" aria-hidden="true"></i>Thêm mới</a>
		</div>
		@using (Html.BeginForm("Index", "employee", FormMethod.Get, new { @class = "form-horizontal" }))
		{
			<div class="col-sm-4 col-sm-offset-6 text-right">
				<div class="input-group">
					@Html.TextBox("search", null, new { @class = "form-control", @placeholder = "Nhập tài khoản cần tìm" })
					<div class="input-group-btn">
						<button type="submit" class="btn btn-success"><i class="fa fa-search"></i>Tìm kiếm</button>
					</div>
				</div>
			</div>
		}
	</div>
</div>


<div class="content mt-3">
	<div class="row">
		<div class="col-lg-12">
			<div class="card">
				<div class="card-body">
					<!-- /.panel-heading -->
					<div class="panel-body">


						<div class="table-responsive">
							<table class="table table-striped table-bordered table-hover">
								<thead>
									<tr>
										<th>@Html.DisplayNameFor(model => model.First().ID)</th>
										<th>@Html.DisplayNameFor(model => model.First().UserName)</th>
										<th>@Html.DisplayNameFor(model => model.First().Password)</th>
										<th>@Html.DisplayNameFor(model => model.First().Status)</th>
										<th>#</th>
									</tr>
								</thead>
								<tbody id="tblProduct">
									@foreach (var item in Model)
									{
										<tr id="@item.ID">
											<td>
												@Html.DisplayFor(modelItem => item.ID)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.UserName)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.Password)
											</td>
											<td>
												@(item.Status == true ? "Active" : "Blocked" )
											</td>
											<td>
												<button name="view" type="button" onclick="location.href='@Url.Action("edit", "employee", new { id = item.ID})'" class="btn btn-primary icon-only"><i class="fa fa-info"></i></button>&nbsp;|
												<button name="update" onclick="location.href='@Url.Action("edit", "employee", new { id = item.ID})'" type="button" class="btn btn-warning icon-only"><i class="fa fa-edit"></i></button>&nbsp;|
												@if (item.Status == false)
												{
													<button name="delete" type="button" class="btn btn-danger icon-only"><i class="fa fa-trash-o"></i></button>
												}
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
						<!-- /.table-responsive -->
					</div>
					<!-- /.panel-body -->
				</div>
			</div>
		</div>
	</div>
</div>
@Html.PagedListPager(Model, page => Url.Action("index", "employee", new { page, search = Request.QueryString["search"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })


@section jsfooter{
	<script type="text/javascript">
		$(document).ready(function () {
			$(document).on('click', "button[name='delete']", function () {

				let id = $(this).closest('tr').attr('id');
				console.log('ID = ' + id);
				if (confirm('Bạn có muốn xóa?')) {
					$.post("/admin/employee/delete",
						{
							id: id,
						},
						function (result) {
							if (result.code == 200) {
								location.reload();
							} else {
								alert(result.msg);
							}
						});
				}
			});

		});

	</script>
}